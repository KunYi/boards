version: "3"

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
    depends_on:
      - backend-core
    env_file:
      - frontend/.env
  backend-core:
    container_name: backend-core
    build:
      context: ./backend-core
    ports:
      - 8080:8080
      - 2345:2345
    volumes:
      - ./backend-core:/app/src
    env_file:
      - backend-core/.env
    environment:
      - INTERNAL_NETWORK=true
    depends_on:
      - db-core
      - rabbitmq
  backend-notification:
    container_name: backend-notification
    build:
      context: ./backend-notification
    ports:
      - 2346:2346
    volumes:
      - ./backend-notification:/app/src
    env_file:
      - backend-notification/.env
    environment:
      - INTERNAL_NETWORK=true
    depends_on:
      - db-core
      - rabbitmq
  db-core:
    container_name: db-core
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: "boards"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 20s
      timeout: 10s
      retries: 5
    volumes:
      - db-core-data:/var/lib/postgresql/data
      - ./backend-core/db/testdata:/db/testdata
  swagger-core:
    container_name: swagger-core
    image: swaggerapi/swagger-ui
    environment:
      SWAGGER_JSON: "/spec/swagger.yaml"
    volumes:
      - ./backend-core/swagger.yaml:/spec/swagger.yaml
    ports:
      - 8081:8080
  redis-ws:
    container_name: redis-ws
    image: redis:latest
    ports:
      - 6379:6379
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - backend-notification/.env
volumes:
  db-core-data:
